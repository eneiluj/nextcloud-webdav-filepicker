declare class ToastType {
    static readonly ERROR = "toast-error";
    static readonly WARNING = "toast-warning";
    static readonly INFO = "toast-info";
    static readonly SUCCESS = "toast-success";
    static readonly PERMANENT = "toast-error";
}
export interface ToastOptions {
    /**
     * Defines the timeout after which the toast is closed. Set to 0 to have a persistent toast.
     */
    timeout?: number;
    /**
     * Set to true to allow HTML content inside of the toast text
     * @default false
     */
    isHTML?: Boolean;
    /**
     * Set a type of {ToastType} to style the modal
     */
    type?: ToastType;
    /**
     * Provide a function that is called after the toast is removed
     */
    onRemove?: Function;
    /**
     * Provide a function that is called when the toast is clicked
     */
    onClick?: Function;
    /**
     * Make the toast closable
     */
    close?: Boolean;
    /**
     * Specify the element to attach the toast element to (for testing)
     */
    selector?: string;
}
/**
 * Show a toast message
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */
export declare function showMessage(text: string, options?: ToastOptions): Toast;
/**
 * Show a toast message with error styling
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */
export declare function showError(text: string, options?: ToastOptions): Toast;
/**
 * Show a toast message with warning styling
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */
export declare function showWarning(text: string, options?: ToastOptions): Toast;
/**
 * Show a toast message with info styling
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */
export declare function showInfo(text: string, options?: ToastOptions): Toast;
/**
 * Show a toast message with success styling
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */
export declare function showSuccess(text: string, options?: ToastOptions): Toast;
export {};
