"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.get-own-property-descriptors");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showMessage = showMessage;
exports.showError = showError;
exports.showWarning = showWarning;
exports.showInfo = showInfo;
exports.showSuccess = showSuccess;

var _toastifyJs = _interopRequireDefault(require("toastify-js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ToastType = function ToastType() {
  _classCallCheck(this, ToastType);
};

ToastType.ERROR = 'toast-error';
ToastType.WARNING = 'toast-warning';
ToastType.INFO = 'toast-info';
ToastType.SUCCESS = 'toast-success';
ToastType.PERMANENT = 'toast-error';

/**
 * Show a toast message
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */
function showMessage(text, options) {
  var _options$type;

  options = Object.assign({
    timeout: 7,
    isHTML: false,
    type: undefined,
    // An undefined selector defaults to the body element
    selector: undefined,
    onRemove: function onRemove() {},
    onClick: function onClick() {},
    close: true
  }, options);

  if (!options.isHTML) {
    // fime mae sure that text is extracted
    var element = document.createElement('div');
    element.innerHTML = text;
    text = element.innerText;
  }

  var classes = (_options$type = options.type) !== null && _options$type !== void 0 ? _options$type : '';
  var toast = (0, _toastifyJs.default)({
    text: text,
    duration: options.timeout === null || options.timeout === undefined ? null : options.timeout * 1000,
    callback: options.onRemove,
    onClick: options.onClick,
    close: options.close,
    gravity: 'top',
    selector: options.selector,
    position: 'right',
    backgroundColor: '',
    className: 'toast ' + classes
  });
  toast.showToast();
  return toast;
}
/**
 * Show a toast message with error styling
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */


function showError(text, options) {
  return showMessage(text, _objectSpread(_objectSpread({}, options), {}, {
    type: ToastType.ERROR
  }));
}
/**
 * Show a toast message with warning styling
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */


function showWarning(text, options) {
  return showMessage(text, _objectSpread(_objectSpread({}, options), {}, {
    type: ToastType.WARNING
  }));
}
/**
 * Show a toast message with info styling
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */


function showInfo(text, options) {
  return showMessage(text, _objectSpread(_objectSpread({}, options), {}, {
    type: ToastType.INFO
  }));
}
/**
 * Show a toast message with success styling
 *
 * @param text Message to be shown in the toast, any HTML is removed by default
 * @param options
 */


function showSuccess(text, options) {
  return showMessage(text, _objectSpread(_objectSpread({}, options), {}, {
    type: ToastType.SUCCESS
  }));
}
//# sourceMappingURL=toast.js.map